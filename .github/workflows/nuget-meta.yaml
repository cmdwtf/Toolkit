name: NuGet Publish Meta Package & Tag

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build & Publish Meta
    
    runs-on: windows-latest
    
    env:
      # .NET Settings
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
      
      ####################################### BUILD #######################################

    - name: Build Meta Package
      run: dotnet build .meta\Toolkit.csproj --nologo --configuration Release
      # the meta project defaults to the targets 'Restore' and 'Pack', so build takes care of everything.
      
      ####################################### STORE #######################################

    - name: Store Meta Artifacts
      uses: actions/upload-artifact@v2.2.2
      with:
        name: NuGet Meta Package
        path: |
          **/*.nupkg
        retention-days: 7
      
      ####################################### PUBLISH #######################################

    - name: Publish Meta Package & Tag
      uses: nitz/publish-nuget@1a1ef3b003e768def4adf3bdc9e1abd18255365d
      with:
        PROJECT_FILE_PATH: .meta/Toolkit.csproj
        # we will make our tag here!
        TAG_COMMIT: true
        VERSION_FILE_PATH: .meta/Version.props
        VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$
        TAG_FORMAT: v*
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        NUGET_SOURCE: https://api.nuget.org
        # meta has no symbols.
        INCLUDE_SYMBOLS: false
        SKIP_BUILD: true
