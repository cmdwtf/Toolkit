name: .NET Build & NuGet Publish

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      - '**/*.editorconfig'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      - '**/*.editorconfig'
  workflow_dispatch:
    inputs:
      version_suffix:
        description: 'The post-dash text to append to the build version.'
        required: false
        default: 'forced'

jobs:
  build-and-deploy:
    if: contains(toJson(github.event.commits), '***NO_CI***') == false
    name: Build & Deploy Toolkit
    
    runs-on: windows-latest
    
    env:
      # .NET Settings
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0

    steps:
    - uses: actions/checkout@v3
    
    - name: Cache .NET Toolchains
      id: cache-dotnet-toolchain
      uses: actions/cache@v2
      with:
        path: '%LocalAppData%\Microsoft\dotnet\'
        key: 'dotnet-toolchain-7-6-3.1'
        restore-keys: 'dotnet-toolchain-7-6-3.1'
        
    - id: cache-dotnet-toolchain-hit-reset-paths
      if: steps.cache-dotnet-toolchain.outputs.cache-hit == 'true'
      run: |
        echo "Setting `$env:GITHUB_PATH to..."
        echo "$env:LocalAppData\Microsoft\dotnet;$env:UserProfile\.dotnet\tools;$env:PATH"
        $env:GITHUB_PATH="$env:LocalAppData\Microsoft\dotnet;$env:UserProfile\.dotnet\tools;$env:PATH"

    - name: Setup .NET (7.0, 6.0, Core 3.1)
      if: steps.cache-dotnet-toolchain.outputs.cache-hit != 'true'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          3.1.x
          6.0.x
          7.0.x

    # packages don't like to restore if you don't clean first?
    # see: https://github.com/actions/setup-dotnet/issues/155
    - name: Clean (Restore Workaround)
      run: dotnet clean --nologo --configuration Release && dotnet nuget locals all --clear

    - name: Restore dependencies
      run: dotnet restore --nologo
      
    ####################################### BUILD #######################################

    - name: Build
      run: dotnet build --nologo --no-restore --verbosity normal --configuration Release  -property:ContinuousIntegrationBuild=true
      
    ####################################### STORE #######################################

    - name: Store Package Artifacts
      uses: actions/upload-artifact@v2.2.2
      with:
        name: NuGet Packages
        path: |
          **/*.nupkg
          **/*.snupkg
        retention-days: 7

    - name: Store Binary Artifacts
      uses: actions/upload-artifact@v2.2.2
      with:
        name: Library Binaries
        path: |
          **/bin/Release/**
          copyright
          LICENSE
          *.md
        retention-days: 7
              
    ####################################### TEST #######################################

    - name: Test
      run: dotnet test --nologo --no-build --no-restore --verbosity normal
      
    ####################################### META #######################################

    - name: Restore Meta Package
      run: dotnet restore .meta/Meta.csproj --nologo
      
    - name: Pack Meta Package
      run: dotnet pack .meta/Meta.csproj --nologo --no-build --configuration Release -o .
      
    - name: Store Meta Artifacts
      uses: actions/upload-artifact@v2.2.2
      with:
        name: NuGet Meta Package
        path: |
          *.nupkg
        retention-days: 7
      
    ####################################### PUBLISH #######################################
    
    ### Publish Meta, Tag Repo
    - name: Publish Meta Package & Tag
      uses: nitz/publish-nuget@13cf3a0ec3840b62a0fd20d559ab1e2a63b0d75a
      with:
        PROJECT_FILE_PATH: .meta/Meta.csproj
        PACKAGE_NAME: cmdwtf.Toolkit
        # we will make our tag here!
        TAG_COMMIT: true
        VERSION_FILE_PATH: .meta/Version.props
        VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$
        TAG_FORMAT: v*
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        NUGET_SOURCE: https://api.nuget.org
        # meta has no symbols to publish!
        INCLUDE_SYMBOLS: false
        SKIP_BUILD: true

    ### Publish Core
    - name: Publish Toolkit.Core
      uses: nitz/publish-nuget@13cf3a0ec3840b62a0fd20d559ab1e2a63b0d75a
      with:
        PROJECT_FILE_PATH: Toolkit.Core/Toolkit.Core.csproj
        PACKAGE_NAME: cmdwtf.Toolkit.Core
        TAG_COMMIT: false
        VERSION_FILE_PATH: .meta/Version.props
        VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$
        TAG_FORMAT: v*
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        NUGET_SOURCE: https://api.nuget.org
        INCLUDE_SYMBOLS: true
        SKIP_BUILD: true

    ### Publish History
    - name: Publish Toolkit.History
      uses: nitz/publish-nuget@13cf3a0ec3840b62a0fd20d559ab1e2a63b0d75a
      with:
        PROJECT_FILE_PATH: Toolkit.History/Toolkit.History.csproj
        PACKAGE_NAME: cmdwtf.Toolkit.History
        TAG_COMMIT: false
        VERSION_FILE_PATH: .meta/Version.props
        VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$
        TAG_FORMAT: v*
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        NUGET_SOURCE: https://api.nuget.org
        INCLUDE_SYMBOLS: true
        SKIP_BUILD: true

    ### Publish Win32
    - name: Publish Toolkit.Win32
      uses: nitz/publish-nuget@13cf3a0ec3840b62a0fd20d559ab1e2a63b0d75a
      with:
        PROJECT_FILE_PATH: Toolkit.Win32/Toolkit.Win32.csproj
        PACKAGE_NAME: cmdwtf.Toolkit.Win32
        TAG_COMMIT: false
        VERSION_FILE_PATH: .meta/Version.props
        VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$
        TAG_FORMAT: v*
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        NUGET_SOURCE: https://api.nuget.org
        INCLUDE_SYMBOLS: true
        SKIP_BUILD: true

    ### Publish WinForms
    - name: Publish Toolkit.WinForms
      uses: nitz/publish-nuget@13cf3a0ec3840b62a0fd20d559ab1e2a63b0d75a
      with:
        PROJECT_FILE_PATH: Toolkit.WinForms/Toolkit.WinForms.csproj
        PACKAGE_NAME: cmdwtf.Toolkit.WinForms
        TAG_COMMIT: false
        VERSION_FILE_PATH: .meta/Version.props
        VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$
        TAG_FORMAT: v*
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        NUGET_SOURCE: https://api.nuget.org
        INCLUDE_SYMBOLS: true
        SKIP_BUILD: true

    ### Publish WinForms.Dialogs
    - name: Publish Toolkit.WinForms.Dialogs
      uses: nitz/publish-nuget@13cf3a0ec3840b62a0fd20d559ab1e2a63b0d75a
      with:
        PROJECT_FILE_PATH: Toolkit.WinForms.Dialogs/Toolkit.WinForms.Dialogs.csproj
        PACKAGE_NAME: cmdwtf.Toolkit.WinForms.Dialogs
        TAG_COMMIT: false
        VERSION_FILE_PATH: .meta/Version.props
        VERSION_REGEX: ^\s*<VersionPrefix>(.*)<\/VersionPrefix>\s*$
        TAG_FORMAT: v*
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
        NUGET_SOURCE: https://api.nuget.org
        INCLUDE_SYMBOLS: true
        SKIP_BUILD: true

