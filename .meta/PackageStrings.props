<Project>
  <Choose>
    <When Condition="'$(MSBuildProjectName)' == 'Meta'">
      <PropertyGroup>
        <PackageReleaseNotes>Some Toolkit.Core components still had the improper namespace of `cmdwtf.Toolkit.WinForms`.</PackageReleaseNotes>
        <Description>A small collection of utility functions and tools created over the years, bundled up in a single package for easy inclusion and management. This is a meta package containing all the various bits of the toolkit.</Description>
        <PackageTags>win32;windows;dialogs;winforms;history;undo;redo;utilities;extensions;helpers</PackageTags>
        <Product>cmd.wtf Toolkit</Product>
      </PropertyGroup>
    </When>
    <When Condition="'$(MSBuildProjectName)' == 'Toolkit.Core'">
      <PropertyGroup>
        <Description>A small collection of utility functions and tools created over the years, bundled up in a single package for easy inclusion and management.</Description>
        <PackageReleaseNotes>Fix namespaces that were improperly `cmdwtf.Toolkit.WinForms`.</PackageReleaseNotes>
        <PackageTags>utilities;extensions;helpers</PackageTags>
        <Product>cmd.wtf Toolkit Core</Product>
      </PropertyGroup>
    </When>
    <When Condition="'$(MSBuildProjectName)' == 'Toolkit.History'">
      <PropertyGroup>
        <Description>A small history toolkit. Supports saving states, undo, and redo. States are saved as serialized JSON objects, via the Newtonsoft.Json library.</Description>
        <PackageReleaseNotes>Multi-framework targeting — $(LibraryFrameworks). Cleanup and refactoring.</PackageReleaseNotes>
        <PackageTags>history;undo;redo</PackageTags>
        <Product>cmd.wtf History Toolkit</Product>
      </PropertyGroup>
    </When>
    <When Condition="'$(MSBuildProjectName)' == 'Toolkit.Win32'">
      <PropertyGroup>
        <Description>A small collection of Windows specific utility functions and tools.</Description>
        <PackageReleaseNotes>Multi-framework targeting — $(LibraryFrameworksWindows). Cleanup and refactoring.</PackageReleaseNotes>
        <PackageTags>win32;windows;utilities;extensions;helpers</PackageTags>
        <Product>cmd.wtf Win32 Toolkit</Product>
      </PropertyGroup>
    </When>
    <When Condition="'$(MSBuildProjectName)' == 'Toolkit.WinForms'">
      <PropertyGroup>
        <Description>A collection of tools, extensions, and helpers to get a little more out of WinForms that isn't provided by the system components.</Description>
        <PackageReleaseNotes>Fixed `ApplyPadding` from applying double the padding.</PackageReleaseNotes>
        <PackageTags>winforms;utilities;extensions;helpers</PackageTags>
        <Product>cmd.wtf WinForms Toolkit</Product>
      </PropertyGroup>
    </When>
    <When Condition="'$(MSBuildProjectName)' == 'Toolkit.WinForms.Dialogs'">
      <PropertyGroup>
        <Description>A small toolkit that provides easy-to-use Ookii.Dialogs functionality through MessageBox-style APIs.</Description>
        <PackageReleaseNotes>Bumped Ookii.Dialog package to 3.0.0 for proper .NET 5.0 and .NET Core 3.1 support.</PackageReleaseNotes>
        <PackageTags>dialogs;winforms;utilities;extensions;helpers</PackageTags>
        <Product>cmd.wtf WinForms Dialog Toolkit</Product>
      </PropertyGroup>
    </When>
  </Choose>
</Project>
